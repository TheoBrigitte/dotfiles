#!/usr/bin/env bash

set -eu

print_usage() {
  echo "Usage:
  $(basename $0) <installation> [ <separator> <cluster> ]

Create kubeconfig for the given cluster or installation.
Also point gsctl to the given installation.

  <installation>	installation name as given by \`opsctl list installations\`
  <separator>		can be anything: space, slash, dash, sentence ...
  <cluster>		cluster name as given by \`gsctl list clusters\`"
}

# verify that kubectl context is present and its client certificate is still valid.
is_config_valid() {
  if ! kubeconfig_exists "$1"; then
    return 1
  fi

  CLIENT_CRT=$(kubectl config view -o=go-template --template='{{range $_,$ctx:=.contexts}}{{if eq $ctx.name "'"$1"'"}}{{range $_,$user:=$.users}}{{if eq $user.name $ctx.context.user}}{{index $user.user "client-certificate"}}{{end}}{{end}}{{end}}{{end}}')
  if ! openssl x509 -in "${CLIENT_CRT}" -checkend 0 &>/dev/null; then
    return 1
  fi

  return 0
}

kubeconfig_exists() {
  if kubectl config get-contexts "$1" &>/dev/null; then
    return 0
  else
    return 1
  fi
}

is_installation() {
  opsct list installation -s | grep -q "$1"
}

wait_error() {
  error=0
  while [ -n "$(jobs -p)" ]; do
    if ! wait -n; then
      error=1
    fi
  done
  return $error
}

if [ $# -lt 1 ] || [ "$1" == "-h" ]; then
  print_usage
  exit 0
fi

# replace / separator with space.
args=$(echo -n "$@" | sed -e 's/[^[:alnum:]]/ /g')

 # bash will split words on spaces.
values=($args)

INSTALLATION="${values[0]}"
KUBE_CONTEXT="giantswarm-${values[0]}"

if [ ${#values[@]} -ge 2 ]; then
  CLUSTER="${values[-1]}"
  KUBE_CONTEXT="giantswarm-${values[-1]}"
fi

(
  set -ex
  gsctl select endpoint "${INSTALLATION}"
)

if ! is_config_valid "${KUBE_CONTEXT}"; then
  if [ -n "${CLUSTER+x}" ]; then
    (
      set -ex
      gsctl create kubeconfig --certificate-organizations system:masters --ttl 1d -c "${CLUSTER}"
    )&
  else
    (
      set -ex
      opsctl create kubeconfig --ttl 1 -c "${INSTALLATION}"
      )&
  fi

  wait_error
fi

kubectl config use-context "${KUBE_CONTEXT}"

