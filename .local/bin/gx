#!/usr/bin/env bash

set -eu

print_usage() {
  echo "Usage:
  $(basename $0) <installation> [ <separator> <cluster> ]

Create kubeconfig for the given cluster or installation.

  <installation>	installation name
  <separator>		can be any non alphanum character
  <cluster>		cluster name"
}


if [ $# -lt 1 ] || [ "$1" == "-h" ]; then
  print_usage
  exit 0
fi

# replace / separator with space.
args=$(echo -n "$@" | sed -e 's/[^[:alnum:]]/ /g')

 # bash will split words on spaces.
values=($args)

INSTALLATION="${values[0]}"

values_length=${#values[@]}
if [ $values_length -ge 2 ]; then
  CLUSTER="${values[$values_length-1]}"
fi


provider=$(opsctl show installation -i "${INSTALLATION}" | yq -r .Provider)

if [ "$provider" = "kvm" ]; then
  (
    set -ex
    opsctl create kubeconfig --ttl 1 -i "${INSTALLATION}"
  )
  (
    set -ex
    gsctl select endpoint "${INSTALLATION}"
  )
  if [ -n "${CLUSTER+x}" ]; then
    (
      set -ex
      gsctl create kubeconfig --certificate-organizations system:masters --ttl 1d -c "${CLUSTER}"
    )
  fi
else
  #(
  #  set -ex
  #  opsctl create kubeconfig --sso -i "${INSTALLATION}"
  #)

  if [ -n "${CLUSTER+x}" ]; then
  (
    set -ex
    kubectl gs login --certificate-ttl 24h --certificate-group system:masters --insecure-namespace --workload-cluster "${CLUSTER}" "${INSTALLATION}"
  )
  else
  (
    set -ex
    kubectl gs login --certificate-ttl 24h --cluster-admin "${INSTALLATION}"
  )
  fi
fi
