#!/bin/bash
#
# This script does the install procedure to handle suspend and hibernate on a laptop using systemd.
# It sets up the systemd sleep configuration and logind configuration files.
# It also disable xfce4-power-manager from handling suspend, hibernate, and lid close events.
# It enables light-locker to handle screen locking and suspend/hibernate events.

set -eu

CONFIG_DIR="$HOME/.config/sleep_setup"
SLEEP_CONFIG_FILE="sleep.conf.d/00-theo.conf"
LOGIND_CONFIG_FILE="logind.conf.d/00-theo.conf"

SYSTEMD_DIR="/etc/systemd"
AUTOSTART_DIR="$HOME/.config/autostart"
LIGHT_LOCKER="light-locker.desktop"

DRY_RUN=false

usage() {
  cat <<-EOF
	Usage: $(basename "$0") [options]
	      --dry-run: do not install, just show what would be done
	  -h, --help: show this help message
	EOF
}

generate_autostart() {
  hidden="$1"
  # Generate the autostart file
  cat <<-EOF
	[Desktop Entry]
	Hidden=$hidden
	
	EOF
}

function _run () {
  if $DRY_RUN; then
    echo "  [dry-run]" "$@" >&2
  else
    echo -n "  "
    "$@"
  fi
}

install() {
  tmpdir="$(mktemp -dt sleep-install-XXXXXXXXXX)"
  trap 'rm -rf "$tmpdir"' EXIT

  # Install systemd sleep configuration
  # man 5 systemd-sleep.conf
  echo "> Checking $(basename "$SLEEP_CONFIG_FILE")"
  if ! diff -q "$CONFIG_DIR/$SLEEP_CONFIG_FILE" "$SYSTEMD_DIR/$SLEEP_CONFIG_FILE" &>/dev/null; then
    _run sudo cp -v "$CONFIG_DIR/$SLEEP_CONFIG_FILE" "$SYSTEMD_DIR/$SLEEP_CONFIG_FILE"
    echo "  reloading systemd"
    _run sudo systemctl daemon-reload
    echo "  done"
  else
    echo "  already installed"
  fi

  # Install systemd logind configuration
  # man 5 logind.conf
  echo "> Checking $(basename "$LOGIND_CONFIG_FILE")"
  if ! diff -q "$CONFIG_DIR/$LOGIND_CONFIG_FILE" "$SYSTEMD_DIR/$LOGIND_CONFIG_FILE" &>/dev/null; then
    _run sudo cp -v "$CONFIG_DIR/$LOGIND_CONFIG_FILE" "$SYSTEMD_DIR/$LOGIND_CONFIG_FILE"
    echo "  reloading systemd"
    _run sudo systemctl daemon-reload
    echo "  restarting systemd-logind"
    _run sudo systemctl restart systemd-logind
    echo "  done"
  else
    echo "  already installed"
  fi

  # Disable xfce4-power-manager power management handling
  # NOTE: keep it running for brightness control
  # https://docs.xfce.org/xfce/xfce4-power-manager/4.20/faq
  echo "> Checking xfce4-power-manager"
  _run xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/logind-handle-lid-switch -n -t bool -s true
  _run xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/logind-handle-power-key -n -t bool -s true
  _run xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/logind-handle-suspend-key -n -t bool -s true
  _run xfconf-query -c xfce4-power-manager -p /xfce4-power-manager/logind-handle-hibernate-key -n -t bool -s true
  echo "  configured"

  # Enable light-locker autostart
  # https://wiki.archlinux.org/title/LightDM
  echo "> Checking $LIGHT_LOCKER"
  generate_autostart "false" > "$tmpdir/$LIGHT_LOCKER"
  if ! diff -q "$tmpdir/$LIGHT_LOCKER" "$AUTOSTART_DIR/$LIGHT_LOCKER" &>/dev/null; then
    ! $DRY_RUN && cat "$tmpdir/$LIGHT_LOCKER" > "$AUTOSTART_DIR/$LIGHT_LOCKER"
    echo "  updated"
  else
    echo "  already installed"
  fi

  if ! ps -C light-locker &>/dev/null; then
    ! $DRY_RUN && light-locker &
    echo "  started"
  else
    echo "  already running"
  fi
}

main() {
  while [ $# -gt 0 ]; do
    case $1 in
      --dry-run)
        DRY_RUN=true
        ;;
      -h|--help)
        usage
        exit 0
        ;;
    esac
    shift
  done

  if [ ! -d "$CONFIG_DIR" ]; then
    echo "Error: $CONFIG_DIR does not exist" >&2
    exit 1
  fi

  install
}

main "$@"
